@font-face {
    font-family: noto;
    src: url("_notoSans.ttf");
}

.nightMode {
    --df-link: rgb(255, 255, 255);
    --df-answer: rgb(255, 96, 96);
    --df-answer-correct: rgb(139, 237, 139);
    --df-info: rgb(203, 196, 119);
    --df-info-secondary: rgb(207, 132, 183);
    --df-meaning: rgb(132, 211, 153);
    --df-list-item: #f1d4b0;
    --df-list-item-info: rgb(207, 132, 183);
    --df-playbutton-main: rgb(192, 245, 135);
    --df-playbutton-main-focus: rgb(113, 219, 118);
    --df-playbutton-secondary: rgb(241, 116, 88);
    --df-playbutton-secondary-focus: rgb(255, 73, 73);
    --df-dropdown-title: #b0dff1;
    --df-dropdown-button: rgb(238, 67, 67);
    --df-background: #2c2c2c;
    --df-tile-background: #303030;
    --df-tile-secondary-background: #353535;
    --df-button: #255441;
}

:root {
    --df-link: rgb(0, 0, 0);
    --df-answer: rgb(232, 82, 82);
    --df-answer-correct: rgb(108, 191, 108);
    --df-info: rgb(165, 158, 82);
    --df-info-secondary: rgb(212, 61, 164);
    --df-meaning: rgb(82, 192, 113);
    --df-list-item: #ed8115;
    --df-list-item-info: rgb(213, 94, 175);
    --df-playbutton-main: rgb(124, 203, 40);
    --df-playbutton-main-focus: rgb(88, 177, 56);
    --df-playbutton-secondary: rgb(233, 94, 63);
    --df-playbutton-secondary-focus: rgb(255, 45, 45);
    --df-dropdown-title: #49b2db;
    --df-dropdown-button: rgb(226, 39, 39);
    --df-background: #f0f0f0;
    --df-tile-background: #e9e9e9;
    --df-tile-secondary-background: #eeeeee;
    --df-input-padding: 10px;
    --df-button: #86dab8;
}

* {
    font-family: noto;
}

.card {
    font-family: noto;
    align-content: center;
    text-align: center;
    justify-content: center;
    display: grid;
    flex-wrap: wrap;
    background: var(--df-background) !important;
}

.replay-button, audio {
    display:none !important;
}

header {
    font-size: smaller;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    > a {
        opacity: 0.3;
        margin-bottom: 5vh;
        color:var(--df-link);
        &:hover {
            opacity: 0.6;
        }
    }
}

main {
    padding: 12px;
    align-items: center;
    justify-items: center;
    display: grid;
    /* margin-top: 10px; */
    &:has(>.answerTile+.answerTile) {
        gap: 30px;
        grid-template-areas:
            "a a b b"
            ". c c .";
    }
    &:has(~ main):has( .typedInput) {
        padding-bottom: 0;
    }
}

.answerTile {
    height: 100%;
    width: 100%;
    padding: 10px;
    padding-bottom: 0;
    border-radius: 20px;
    background: var(--df-tile-background);
    &:first-child {
        grid-area: a;
    }
    &:nth-child(2) {
        grid-area: b;
    }
    &:nth-child(3) {
        grid-area: c;
    }
}


#Prompt {
    font-size: x-large;
    display: contents;
}

#Answer {
    font-size: larger;
    display: grid;
    grid-template-columns: 1fr;
    justify-items: center;
    border-radius: 1em;
    color: var(--df-answer);
}

.info {
    font-size: 1rem;
    font-style: italic;
    opacity: 1;
    color: var(--df-info); 
    transition: 0.5s;
    position: relative;
    text-align: center;
    &:is(span) {
        padding-top: 2px;
    }
    &.secondary {
        color: var(--df-info-secondary);
    }
}

.meanings {
    font-size: smaller;
    color: var(--df-meaning);
    > ul {
        display: grid;
        gap: 1vw;
        grid-template-columns: 1fr 1fr;
        align-items: center;
        align-content: center;
        padding: 0;
    }
    & li {
        display: flex;
        height: 50%;
        background: var(--df-tile-secondary-background);
        border-radius: 1em;
        padding: 0.5em;
        align-items: center;
        align-content: center;
        justify-content: center;
        justify-items: center;
        &:only-child {
            grid-column: 1 / 3;
        }
    }
}



dl {
    display: flex;
    flex-direction: column;
    position:relative;
    .examples & {
        margin-top: 0;
        text-align: center;
    }
    > * {
        margin: 0;
        transition: 0.5s;
        color: var(--df-list-item);
    }
    > dd {
        font-style: italic;
        color: var(--df-list-item-info);
    }
    > dt:nth-of-type(2) {
        position:absolute;
        opacity: 0;
        width: 100%;
    }
    &:hover {
        > dt:nth-of-type(2) {
            opacity: 1; 
        }
        > dt {
            opacity: 0;
        }
    }
}

.typedInput {
    padding: 2px 10px;
    border-radius: 1em;
    color: var(--canvas) !important;
    filter: saturate(80%);
    &.correct {
        background: var(--flag-3) !important;
    }
    &.wrong {
        margin: 10px;
        background: var(--flag-1);
    }
}

#typeans {
    font-family: noto;
}

input#typeans {
    border: none;
    padding: 0.5em;
    text-align: center;
    border-radius: 5vw;
    display: block;
    margin-top: 2vh;
    outline: none;
}

code#typeans {
    font-size: large;
    display: block;
    padding-top: 1em;
    font-family: noto;
    > span:first-child {
        border-radius: 1em 0 0 1em;
        padding-left: 3vw;
    }
    > span:last-child {
        border-radius: 0 1em 1em 0;
        padding-right: 3vw;
    }
    > span:only-child {
        border-radius: 1em;
        padding-right: 3vw;
        padding-left: 3vw;
    }
}

.examples {
    font-size: larger;
    text-align: center;
    display: flex;
    align-items: center;
    margin: 3vh 0 2vh 0;
    flex-direction: column;
    > span {
        width: 100%;
    }
}

.playButton {
    display: flex;
    width: 24px;
    height: 24px;
    transition: 0.5s;
    /* padding: 0.3em; */
    margin: 0.2em;
    > svg {
        transition: 0.5s;
        fill: var(--df-playbutton-secondary);
    }
    &:not(.disabled):hover {
        cursor: pointer;
        transform: scale(1.3);
        > svg {
            fill: var(--df-playbutton-secondary-focus);
        }
    }
    &:is(.disabled) {
        > svg {
            filter: saturate(30%);
        }
    }
}

#Prompt > .playButton {
    transform: scale(1.2);
    > svg {
        fill: var(--df-playbutton-main);
    }
    &:not(.disabled):hover {
        > svg {
            fill: var(--df-playbutton-main-focus);
            transform: scale(1.4);
        }
    }
}


.forms {
    transition: 0.5s;
    color: var(--df-dropdown-title);
    > ul {
        display: none;
        transition: 0.5s;
    }
}

.expandButton {
    cursor: pointer;
    border-radius: 0 0 50% 50%;
    &:hover {
        > svg {
            transform: scale(1.4);
        }
    }
    > svg {
        fill: var(--df-dropdown-button);
        transition: 0.5s;
    }
    &.collapse {
        > svg {
            transform: rotate(180deg);
        }
        &:hover {
            > svg {
                transform: 
                    scale(1.4)
                    rotate(180deg);
            }
        }
    };
}
